# rabbitmq-deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3-management
        ports:
        - containerPort: 15672
        - containerPort: 5672
        livenessProbe:
          exec:
            command: ["rabbitmq-diagnostics", "-q", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
  - name: management
    port: 15672
    targetPort: 15672
  - name: amqp
    port: 5672
    targetPort: 5672
  type: ClusterIP

---
# consumer-deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      containers:
      - name: consumer
        image: consumer
        imagePullPolicy: Never

---
# producer-job
apiVersion: batch/v1
kind: Job
metadata:
  name: producer
spec:
  template:
    metadata:
      labels:
        app: producer
    spec:
      restartPolicy: Never
      containers:
      - name: producer
        image: producer
        imagePullPolicy: Never

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: collector-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 500Mi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/Users/lukelele/Downloads/output"
---
# volume claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: collector-volume-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 500Mi
---
# collector-deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: collector
  template:
    metadata:
      labels:
        app: collector
    spec:
      containers:
      - name: collector
        image: collector
        imagePullPolicy: Never
        volumeMounts:
          - name: collector-volume
            mountPath: "/app/data"
      volumes:
      - name: collector-volume
        persistentVolumeClaim:
          claimName: collector-volume-claim
